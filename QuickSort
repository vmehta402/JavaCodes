public class Quicksort {

	public static void quickSort(int[] input) {
		
		quickSort(input,0,input.length-1);
	}
	
	private static void quickSort(int[] input, int si, int ei) {
		
		if(si>=ei)
		{
			return;
		}
		
		int pivotPos = partition(input,si,ei);
		quickSort(input, si, pivotPos-1);
		quickSort(input, pivotPos+1, ei);
	}
	
	public static int partition(int[] input, int si, int ei) {
	int pivpos=si;
	int count=0;
	int pivele = input[si];
	int j=ei;
	for(int i=si+1; i<=ei; i++) {
		
		if(input[i] < pivele) {
			count++;
		}
	}
	pivpos = si+count;
	input[si] = input[pivpos];
	input[pivpos] = pivele;
	int k=si;
	while(k<pivpos && j>pivpos) {
		
		if(input[k] >= input[pivpos]) {
			
			if(input[j]<input[pivpos]) {
				int temp = input[k];
				input[k] = input[j];
				input[j] = temp;
				j--;
				k++;
			}
			else 
			{
				j--;
			}
		}
		else
		{
			k++;
		}
	}
	
		return pivpos;
	}
	
	

}
